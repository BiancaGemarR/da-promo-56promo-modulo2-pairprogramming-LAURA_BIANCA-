USE northwind;
/*  4. Conociendo a las empleadas:
El objetivo de cualquier buena jefa (o trabajadora) en una empresa deber√≠a ser conocer bien a sus compa√±eras. 
Para lograrlo, vamos a dise√±ar una consulta SQL para obtener una lista con los datos de las empleadas y empleados de la empresa Northwind. 
Esta consulta incluir√° los campos EmployeeID, LastName y FirstName.*/
SELECT employee_id, last_name, first_name
	FROM employees;
/* 5. Conociendo los productos m√°s baratos:
Supongamos que en nuestro primer d√≠a en la empresa nos informan que est√°n llevando a cabo una reestructuraci√≥n del negocio. 
Nuestras compa√±eras nos comentan que, en estos momentos, Northwind tiene una amplia gama de productos en venta, algunos de los 
cuales tienen un √©xito limitado entre las clientas. Nuestra primera tarea consiste en identificar aquellos productos (tabla products)
 cuyos precios por unidad (UnitPrice) oscilen entre 0 y 5 d√≥lares, es decir, los productos m√°s asequibles.*/
SELECT product_name, unit_price
FROM products
WHERE unit_price BETWEEN 0.0 AND 5.0;

/* 6. Conociendo los productos que no tienen precio:
Para comprobar si los datos en la tabla products est√°n correctos, nos interesa seleccionar aquellos productos que no tengan precio, 
porque lo hayan dejado vac√≠o al introducir los datos (NULL).*/
SELECT product_name, unit_price
FROM products
WHERE unit_price IS NULL;  -- todos tienen precio

/*7. Comparando productos:
Ahora obt√©n los datos de aquellos productos con un precio menor a 15 d√≥lares, pero s√≥lo aquellos que tienen un ID menor que 20 
(para tener una muestra significativa pero no tener que ver todos los productos existentes).
üí° Pista üí° Recuerda que podemos incluir varias condiciones en el WHERE*/
SELECT product_id, product_name, unit_price
FROM products
WHERE unit_price < 15 AND product_id < 20;

/* 8. Cambiando de operadores:
Ahora vamos a hacer la misma consulta que en ejercicio anterior, pero invirtiendo el uso de los operadores y queremos saber 
aquellos que tengan un precio superior a 15 d√≥lares y un ID superior a 20..
üí° Pista üí° Podemos usar NOT*/
SELECT product_id, product_name, unit_price
FROM products
WHERE NOT unit_price < 15 AND NOT product_id < 20;

/* 9.Conociendo los pa√≠ses a los que vendemos:
A Northwind le interesa conocer los datos de los pa√≠ses que hacen pedidos (orders) para focalizar el negocio en esas regiones y 
al mismo tiempo crear campa√±as de marketing para conseguir mejorar en las otras regiones. Realiza una consulta para obtener ese dato. */
SELECT DISTINCT country
FROM customers;
 
/* 10.Conociendo el tipo de productos que vendemos en Northwind:
Crea una consulta que muestre los primeros 10 productos seg√∫n su ID y que nos indique el nombre de dichos productos y sus precios */
SELECT product_id, product_name, unit_price
FROM products
ORDER BY product_id ASC
LIMIT 10;

/* 11.Ordenando los resultados:
Ahora realiza la misma consulta pero que nos muestre los √∫ltimos 10 productos seg√∫n su ID de manera descendiente */
SELECT product_id, product_name, unit_price
FROM products
ORDER BY product_id DESC
LIMIT 10;

/* 12.Que pedidos tenemos en nuestra BBDD:
√öltimamente ha habido algo de descontrol en la empresa a la hora de controlar los pedidos. 
Nos interesa conocer los distintos pedidos que hemos tenido (mostrar los valores √∫nicos de ID en la tabla order_details) */
SELECT DISTINCT order_id, product_id
FROM order_details;

-- BONUS 
/* 13.Qu√© pedidos han gastado m√°s:
Una vez hemos inspeccionado el tipo de pedidos que tenemos en la empresa (en la tabla order_details), desde la direcci√≥n nos piden conocer los 3 pedidos 
que han supuesto un mayor ingreso para la empresa. Crea una columna en esta consulta con el alias ImporteTotal. 
Nota: Utiliza UnitPrice y Quantity para calcular el importe total. */
SELECT order_idcustomers AS Importetotal
FROM order_details
WHERE Importetotal = unit_price * quantity;

/* 14.Los pedidos que est√°n entre las posiciones 5 y 10 de nuestro ranking:
Ahora, no sabemos bien por qu√© raz√≥n, desde el departamento de Ventas nos piden seleccionar el ID de los pedidos situados entre la 5 y la 10 mejor posici√≥n 
en cuanto al coste econ√≥mico total ImporteTotal.üí° Pista üí° Usa LIMIT y OFFSET para mostrar los resultados. */


/* 15.Selecciona env√≠os con retraso:
Nos hacen llegar desde la direcci√≥n la preocupaci√≥n acerca del cumplimiento de las fechas de env√≠o. √öltimamente se est√°n dando retrasos en muchas entregas y 
por ello se busca realizar la acci√≥n preventiva de enviar los paquetes con varios d√≠as adicionales de antelaci√≥n. Para comenzar a planear esos env√≠os anticipados, 
nos piden conocer cu√°l ser√≠a la fecha de env√≠o (ShippedDate) de los pedidos almacenados en la base de datos, si estos sufrieran un retraso de 5 d√≠as. 
Nos piden mostrar la nueva fecha renombrada como FechaRetrasada.
üí° Pista üí° Para realizar lo anterior, busca documentaci√≥n de la funci√≥n DATE_ADD para MySQL. */


/* 16.Selecciona los productos m√°s rentables:
Gracias a un an√°lisis realizado en los √∫ltimos meses en la empresa, se ha comprobado que el rango de productos que puede dar m√°s beneficios parece ser el de 
aquellos con un precio mayor o igual a 15 d√≥lares, pero menor o igual que 50 d√≥lares. Selecciona los datos de ese rango de productos usando el operador BETWEEN */


/* 17.Selecciona los productos con unos precios dados:
Queremos conocer los datos de los productos que tengan exactamente un precio de 18, 19 o 20 d√≥lares (un rango muy concreto de precios del que la empresa quiere 
maximizar sus ventas en un futuro). Usa IN para conseguirlo de manera eficiente. */